{"version":3,"file":"static/js/838.1f01cd25.chunk.js","mappings":"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","sources":["app-lib-components/background.video.js","app-lib-components/loaded-progress-circle.js","app-components/ThreeD.Model.PlaceHolder.js","app-components/Portfolio.AR.VR.js","app-layouts/Protfolio.AR.VR.Layout.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst BackgroundVideo = ({ arvrProps, children }) => {\r\n  const {\r\n    videoSource, audioSource, blur, widthBG,\r\n  } = arvrProps;\r\n  return (\r\n    <div className=\"container\">\r\n      {children}\r\n      <audio\r\n        controls\r\n        autoPlay\r\n        loop\r\n        style={{\r\n          position: 'absolute',\r\n          top: -99999,\r\n        }}>\r\n        <source src={audioSource} type=\"audio/mpeg\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n      <video\r\n        style={{\r\n          filter: `blur(${blur}px)`, WebkitFilter: `blur(${blur}px)`, top: 0, left: 0, zIndex: 1, position: 'absolute', width: `${widthBG}px`,\r\n        }}\r\n        autoPlay=\"autoplay\"\r\n        loop=\"loop\"\r\n        muted\r\n        id=\"futureBGVid\"\r\n        className=\"video\">\r\n        <source src={videoSource} type=\"video/mp4\" />\r\n        <span>Your browser does not support the video tag.</span>\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackgroundVideo;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport 'antd/dist/antd.css';\r\nimport { Progress } from 'antd';\r\nimport './progress.css';\r\n\r\nconst LoadedProgressCircleContainer = ({ styleProps, progress }) => {\r\n  const clickMeRef = useRef();\r\n  var [loader, setLoader] = useState(progress);\r\n  useEffect(() => {\r\n    gsap.to(clickMeRef.current, 3, { y: 10, rotationY: 180 });\r\n    setLoader(progress);\r\n  }, [progress]);\r\n  return (\r\n    <Progress\r\n      strokeColor={{\r\n        '0%': '#108ee9',\r\n        '100%': '#2ae71c',\r\n      }}\r\n      strokeWidth={2}\r\n      width={300}\r\n      style={\r\n        {\r\n          ...styleProps,\r\n          top: '50%',\r\n          left: '50%',\r\n          marginLeft: -150,\r\n        }\r\n      }\r\n      type=\"circle\"\r\n      ref={clickMeRef}\r\n      percent={loader} />\r\n  );\r\n};\r\n\r\nexport default LoadedProgressCircleContainer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport LoadedProgressCircleContainer from '../app-lib-components/loaded-progress-circle';\r\n\r\nconst ThreeDModelPlaceHolderARVR = () => {\r\n  var scene,\r\n    camera,\r\n    hLight,\r\n    dLight,\r\n    renderer,\r\n    targetDom,\r\n    light1,\r\n    light2,\r\n    light3,\r\n    light4,\r\n    controls;\r\n  var [progress, setProgress] = useState(0);\r\n  var manager;\r\n  // carScene = 460;\r\n  const [isLoaded, setIsLoaded] = useState('hidden');\r\n  const [opIsLoaded, setOpIsLoaded] = useState('visible');\r\n  const threeDPlaceholderRef = useRef();\r\n  // const sWidth = window.screen.offsetWidth;\r\n  // const sHeight = 800;\r\n  useEffect(() => {\r\n    // carScene = 460;\r\n    const animate = () => {\r\n      renderer.render(scene, camera);\r\n      requestAnimationFrame(animate);\r\n    };\r\n    const init = () => {\r\n      targetDom = threeDPlaceholderRef.current;\r\n      scene = new THREE.Scene();\r\n      scene.background = null;\r\n      camera = new THREE.PerspectiveCamera(\r\n        40,\r\n        targetDom.offsetWidth / targetDom.offsetHeight,\r\n        1,\r\n        5000,\r\n      );\r\n      camera.rotation.y = 45 / (180 * Math.PI);\r\n      camera.rotation.x = 400;\r\n      camera.position.y = 100;\r\n      camera.position.z = 500;\r\n\r\n      hLight = new THREE.AmbientLight(0xdddddd, 10);\r\n      scene.add(hLight);\r\n      dLight = new THREE.DirectionalLight(0xdddddd, 10);\r\n      dLight.position.set(0, 1, 0);\r\n      dLight.castShadow = true;\r\n      scene.add(dLight);\r\n\r\n      light1 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light1.position.set(0, 300, 500);\r\n      scene.add(light1);\r\n\r\n      light2 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light2.position.set(500, 100, 0);\r\n      scene.add(light2);\r\n\r\n      light3 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light3.position.set(0, 100, -500);\r\n      scene.add(light3);\r\n\r\n      light4 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light4.position.set(-500, 300, 0);\r\n      scene.add(light4);\r\n\r\n      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n      renderer.setClearColor(0xffffff, 0);\r\n      renderer.setSize(targetDom.offsetWidth, targetDom.offsetHeight);\r\n      targetDom.appendChild(renderer.domElement);\r\n      controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.update();\r\n      manager = new THREE.LoadingManager();\r\n      manager.onLoad = function () {\r\n        console.log('Loading complete');\r\n      };\r\n      manager.onProgress = function (item, loaded, total) {\r\n        progress = Math.round((loaded / (total * 100)) * 10000, 2);\r\n        // console.log(item, loaded, total);\r\n        // console.log('Loaded:', progress);\r\n        setProgress(progress);\r\n      };\r\n      manager.onError = function (url) {\r\n        console.log(url);\r\n        console.log('Error loading');\r\n      };\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(\r\n        '/AR.VR.WEBGL/scene.gltf',\r\n        (gltf) => {\r\n          var mroot = gltf.scene;\r\n          var bbox = new THREE.Box3().setFromObject(mroot);\r\n          var cent = bbox.getCenter(new THREE.Vector3());\r\n          var size = bbox.getSize(new THREE.Vector3());\r\n          // Rescale the object to normalized space\r\n          var maxAxis = Math.max(size.x, size.y, size.z);\r\n          mroot.scale.multiplyScalar(10 * maxAxis);\r\n          bbox.setFromObject(mroot);\r\n          bbox.getCenter(cent);\r\n          bbox.getSize(size);\r\n          // Reposition to 0,halfY,0\r\n          mroot.position.copy(cent).multiplyScalar(-1);\r\n          mroot.position.y -= (size.y * -0.5);\r\n          scene.add(gltf.scene);\r\n          animate();\r\n          setIsLoaded('visible');\r\n          setTimeout(() => {\r\n            setOpIsLoaded('hidden');\r\n          }, 10000);\r\n        },\r\n        undefined,\r\n        (err) => {\r\n          console.error(err);\r\n        },\r\n      );\r\n    };\r\n    init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={\r\n            {\r\n              width: '100%',\r\n              height: 20,\r\n              top: 320,\r\n              position: 'absolute',\r\n              zIndex: 100,\r\n              textAlign: 'center',\r\n              visibility: `${isLoaded}`,\r\n            }\r\n          }>\r\n        {\r\n            (progress > 99.99) ? (\r\n              <div>\r\n                <h3 style={{ color: 'green' }}>\r\n                  <span>\r\n                    &lt; DRAG UP DOWN, LEFT RIGHT, PINCH, ZOOM IN ZOOM OUT  &gt; ON THE CAR MODEL\r\n                  </span>\r\n                </h3>\r\n                <h5 style={{ marginTop: 30 }}>\r\n                  <p><span style={{ color: '#d9363e' }}>React Js &amp; Concept</span></p>\r\n                  <p><span style={{ color: '#efefef' }}>Piyush Kanungo</span></p>\r\n                  <p><span style={{ color: '#d9363e' }}>3D Model</span></p>\r\n                  <p><span style={{ color: '#efefef' }}><strong> Videep Mishra </strong> A Dear Friend and Amazing 3D Artist</span></p>\r\n                </h5>\r\n              </div>\r\n            ) : (\r\n              <h6 style={{ color: '#d9363e' }}>\r\n                <span style={{ color: '#d9363e' }}>\r\n                  &lt; {`${progress} %`} &gt;\r\n                </span>\r\n              </h6>\r\n            )\r\n          }\r\n      </div>\r\n      <div\r\n        ref={threeDPlaceholderRef}\r\n        style={\r\n          {\r\n            width: '100%',\r\n            height: 460,\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n            visibility: `${isLoaded}`,\r\n          }\r\n        }\r\n      />\r\n      <LoadedProgressCircleContainer\r\n        styleProps={\r\n          {\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n            visibility: `${opIsLoaded}`,\r\n          }\r\n        }\r\n        isLoaded={isLoaded}\r\n        progress={progress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeDModelPlaceHolderARVR;\r\n","import React from 'react';\r\nimport BackgroundVideo from '../app-lib-components/background.video';\r\n// import EyeProjector from '../app-lib-components/loaded-eye-projector';\r\nimport ThreeDModelPlaceHolderARVR from './ThreeD.Model.PlaceHolder';\r\nimport BGVid from '../assets/video/AR.VR.2021.Future.VBG.mp4';\r\nimport BGAud from '../assets/audio/AR.VR.2021.Delusion32.mp3';\r\n\r\nconst PortfolioARVR = () => {\r\n  const arvrProps = {\r\n    videoSource: BGVid,\r\n    audioSource: BGAud,\r\n  };\r\n  return (\r\n    <BackgroundVideo arvrProps={{ ...arvrProps }}>\r\n      <ThreeDModelPlaceHolderARVR />\r\n    </BackgroundVideo>\r\n  );\r\n};\r\nexport default PortfolioARVR;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport './layout.index.css';\r\nimport PortfolioARVR from '../app-components/Portfolio.AR.VR';\r\nimport BGVid from '../assets/video/AR.VR.2021.Future.VBG.mp4';\r\nimport BGAud from '../assets/audio/AR.VR.2021.Delusion32.mp3';\r\n\r\nconst ProfolioARVRLayout = () => {\r\n  const bgVidProps = {\r\n    videoSource: BGVid,\r\n    audioSource: BGAud,\r\n    blur: 0,\r\n  };\r\n  return (\r\n    <Row className=\"vh100 \">\r\n      <Col className=\"vh100\" span={24}>\r\n        <PortfolioARVR arvrProps={{ ...bgVidProps }} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default ProfolioARVRLayout;\r\n"],"names":["arvrProps","children","videoSource","audioSource","blur","widthBG","className","controls","autoPlay","loop","style","position","top","src","type","filter","WebkitFilter","left","zIndex","width","muted","id","styleProps","progress","clickMeRef","useRef","useState","loader","setLoader","useEffect","gsap","current","y","rotationY","strokeColor","strokeWidth","marginLeft","ref","percent","scene","camera","hLight","dLight","renderer","targetDom","light1","light2","light3","light4","manager","setProgress","isLoaded","setIsLoaded","opIsLoaded","setOpIsLoaded","threeDPlaceholderRef","animate","render","requestAnimationFrame","THREE","background","offsetWidth","offsetHeight","rotation","Math","PI","x","z","add","set","castShadow","antialias","alpha","setClearColor","setSize","appendChild","domElement","OrbitControls","update","onLoad","console","log","onProgress","item","loaded","total","round","onError","url","GLTFLoader","load","gltf","mroot","bbox","setFromObject","cent","getCenter","size","getSize","maxAxis","max","scale","multiplyScalar","copy","setTimeout","undefined","err","error","height","textAlign","visibility","color","marginTop","BGVid","BGAud","bgVidProps","span"],"sourceRoot":""}