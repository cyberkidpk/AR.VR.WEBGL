{"version":3,"file":"static/js/838.f522e8a8.chunk.js","mappings":"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","sources":["app-lib-components/background.video.js","app-lib-components/loaded-progress-circle.js","app-components/ThreeD.Model.PlaceHolder.js","app-components/Portfolio.AR.VR.js","app-layouts/Protfolio.AR.VR.Layout.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst BackgroundVideo = ({ arvrProps, children }) => {\r\n  const {\r\n    videoSource, audioSource, blur, widthBG,\r\n  } = arvrProps;\r\n  return (\r\n    <div className=\"container\">\r\n      {children}\r\n      <audio controls autoPlay loop>\r\n        <source src={audioSource} type=\"audio/mpeg\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n      <video\r\n        style={{\r\n          filter: `blur(${blur}px)`, WebkitFilter: `blur(${blur}px)`, top: 0, left: 0, zIndex: 1, position: 'absolute', width: `${widthBG}px`,\r\n        }}\r\n        autoPlay=\"autoplay\"\r\n        loop=\"loop\"\r\n        muted\r\n        id=\"futureBGVid\"\r\n        className=\"video\">\r\n        <source src={videoSource} type=\"video/mp4\" />\r\n        <span>Your browser does not support the video tag.</span>\r\n      </video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackgroundVideo;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport 'antd/dist/antd.css';\r\nimport { Progress } from 'antd';\r\nimport './progress.css';\r\n\r\nconst LoadedProgressCircleContainer = ({ styleProps, isLoaded }) => {\r\n  const clickMeRef = useRef();\r\n  var temp;\r\n  var [loader, setLoader] = useState(0);\r\n  var [status, setStatus] = useState(isLoaded);\r\n  useEffect(() => {\r\n    gsap.to(clickMeRef.current, 3, { y: 10, rotationY: 180 });\r\n    setInterval(() => {\r\n      loader += 1;\r\n      if (loader > 100) {\r\n        setLoader(100);\r\n      } else {\r\n        temp = (status === 'visible') ? setLoader(100) : setLoader(loader);\r\n        setStatus(temp);\r\n      }\r\n    }, 4000);\r\n  }, []);\r\n  return (\r\n    <Progress\r\n      strokeColor={{\r\n        from: '#108ee9',\r\n        to: '#2ae71c',\r\n      }}\r\n      strokeWidth={2}\r\n      showInfo={loader === 100}\r\n      width={300}\r\n      style={\r\n        {\r\n          ...styleProps,\r\n          top: '50%',\r\n          left: '50%',\r\n          marginLeft: -150,\r\n        }\r\n      }\r\n      type=\"circle\"\r\n      ref={clickMeRef}\r\n      percent={loader} />\r\n  );\r\n};\r\n\r\nexport default LoadedProgressCircleContainer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport LoadedProgressCircleContainer from '../app-lib-components/loaded-progress-circle';\r\n\r\nconst ThreeDModelPlaceHolderARVR = () => {\r\n  var scene,\r\n    camera,\r\n    hLight,\r\n    dLight,\r\n    renderer,\r\n    targetDom,\r\n    light1,\r\n    light2,\r\n    light3,\r\n    light4,\r\n    controls;\r\n    // carScene = 460;\r\n  const [isLoaded, setIsLoaded] = useState('hidden');\r\n  const [opIsLoaded, setOpIsLoaded] = useState('visible');\r\n  const threeDPlaceholderRef = useRef();\r\n  // const sWidth = window.screen.offsetWidth;\r\n  // const sHeight = 800;\r\n  useEffect(() => {\r\n    // carScene = 460;\r\n    const animate = () => {\r\n      renderer.render(scene, camera);\r\n      requestAnimationFrame(animate);\r\n    };\r\n    const init = () => {\r\n      targetDom = threeDPlaceholderRef.current;\r\n      scene = new THREE.Scene();\r\n      scene.background = null;\r\n      camera = new THREE.PerspectiveCamera(\r\n        40,\r\n        targetDom.offsetWidth / targetDom.offsetHeight,\r\n        1,\r\n        5000,\r\n      );\r\n      camera.rotation.y = 45 / (180 * Math.PI);\r\n      camera.rotation.x = 400;\r\n      camera.position.y = 100;\r\n      camera.position.z = 500;\r\n\r\n      hLight = new THREE.AmbientLight(0xdd9708, 10);\r\n      scene.add(hLight);\r\n      dLight = new THREE.DirectionalLight(0xdd9708, 10);\r\n      dLight.position.set(0, 1, 0);\r\n      dLight.castShadow = true;\r\n      scene.add(dLight);\r\n\r\n      light1 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light1.position.set(0, 300, 500);\r\n      scene.add(light1);\r\n\r\n      light2 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light2.position.set(500, 100, 0);\r\n      scene.add(light2);\r\n\r\n      light3 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light3.position.set(0, 100, -500);\r\n      scene.add(light3);\r\n\r\n      light4 = new THREE.PointLight(0xc4c4c4, 10);\r\n      light4.position.set(-500, 300, 0);\r\n      scene.add(light4);\r\n\r\n      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n      renderer.setClearColor(0xffffff, 0);\r\n      renderer.setSize(targetDom.offsetWidth, targetDom.offsetHeight);\r\n      targetDom.appendChild(renderer.domElement);\r\n      controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.update();\r\n      const loader = new GLTFLoader();\r\n      loader.load(\r\n        '/AR.VR.WEBGL/scene.gltf',\r\n        (gltf) => {\r\n          var mroot = gltf.scene;\r\n          var bbox = new THREE.Box3().setFromObject(mroot);\r\n          var cent = bbox.getCenter(new THREE.Vector3());\r\n          var size = bbox.getSize(new THREE.Vector3());\r\n          // Rescale the object to normalized space\r\n          var maxAxis = Math.max(size.x, size.y, size.z);\r\n          mroot.scale.multiplyScalar(10 * maxAxis);\r\n          bbox.setFromObject(mroot);\r\n          bbox.getCenter(cent);\r\n          bbox.getSize(size);\r\n          // Reposition to 0,halfY,0\r\n          mroot.position.copy(cent).multiplyScalar(-1);\r\n          mroot.position.y -= (size.y * -0.5);\r\n          scene.add(gltf.scene);\r\n          animate();\r\n          setIsLoaded('visible');\r\n          setTimeout(() => {\r\n            setOpIsLoaded('hidden');\r\n          }, 10000);\r\n        },\r\n        undefined,\r\n        (err) => {\r\n          console.error(err);\r\n        },\r\n      );\r\n    };\r\n    init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={\r\n            {\r\n              width: '100%',\r\n              height: 20,\r\n              top: 400,\r\n              position: 'absolute',\r\n              zIndex: 100,\r\n              textAlign: 'center',\r\n              visibility: `${isLoaded}`,\r\n            }\r\n          }\r\n        >\r\n        <h6 style={{ color: 'green' }}> &lt; DRAG UP DOWN, LEFT RIGHT &gt; ON THE CAR MODEL </h6>\r\n      </div>\r\n      <div\r\n        ref={threeDPlaceholderRef}\r\n        style={\r\n          {\r\n            width: '100%',\r\n            height: 460,\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n            visibility: `${isLoaded}`,\r\n          }\r\n        }\r\n      />\r\n      <LoadedProgressCircleContainer\r\n        styleProps={\r\n          {\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n            visibility: `${opIsLoaded}`,\r\n          }\r\n        }\r\n        isLoaded={isLoaded}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreeDModelPlaceHolderARVR;\r\n","import React from 'react';\r\nimport BackgroundVideo from '../app-lib-components/background.video';\r\n// import EyeProjector from '../app-lib-components/loaded-eye-projector';\r\nimport ThreeDModelPlaceHolderARVR from './ThreeD.Model.PlaceHolder';\r\nimport BGVid from '../assets/video/AR.VR.2021.Future.VBG.mp4';\r\n\r\nconst PortfolioARVR = () => {\r\n  const arvrProps = {\r\n    videoSource: BGVid,\r\n  };\r\n  return (\r\n    <BackgroundVideo arvrProps={{ ...arvrProps }}>\r\n      <ThreeDModelPlaceHolderARVR />\r\n    </BackgroundVideo>\r\n  );\r\n};\r\nexport default PortfolioARVR;\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport './layout.index.css';\r\nimport PortfolioARVR from '../app-components/Portfolio.AR.VR';\r\nimport BGVid from '../assets/video/AR.VR.2021.Future.VBG.mp4';\r\nimport BGAud from '../assets/audio/AR.VR.2021.Delusion32.mp3';\r\n\r\nconst ProfolioARVRLayout = () => {\r\n  const bgVidProps = {\r\n    videoSource: BGVid,\r\n    audioSource: BGAud,\r\n    blur: 0,\r\n  };\r\n  return (\r\n    <Row className=\"vh100 \">\r\n      <Col className=\"vh100\" span={24}>\r\n        <PortfolioARVR arvrProps={{ ...bgVidProps }} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default ProfolioARVRLayout;\r\n"],"names":["arvrProps","children","videoSource","audioSource","blur","widthBG","className","controls","autoPlay","loop","src","type","style","filter","WebkitFilter","top","left","zIndex","position","width","muted","id","temp","styleProps","isLoaded","clickMeRef","useRef","useState","loader","setLoader","status","setStatus","useEffect","gsap","current","y","rotationY","setInterval","strokeColor","from","to","strokeWidth","showInfo","marginLeft","ref","percent","scene","camera","hLight","dLight","renderer","targetDom","light1","light2","light3","light4","setIsLoaded","opIsLoaded","setOpIsLoaded","threeDPlaceholderRef","animate","render","requestAnimationFrame","THREE","background","offsetWidth","offsetHeight","rotation","Math","PI","x","z","add","set","castShadow","antialias","alpha","setClearColor","setSize","appendChild","domElement","OrbitControls","update","GLTFLoader","load","gltf","mroot","bbox","setFromObject","cent","getCenter","size","getSize","maxAxis","max","scale","multiplyScalar","copy","setTimeout","undefined","err","console","error","height","textAlign","visibility","color","BGVid","bgVidProps","BGAud","span"],"sourceRoot":""}